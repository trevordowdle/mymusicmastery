{"remainingRequest":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js!/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step2.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step2.vue","mtime":1528868016125},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js","mtime":1529560903522},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Step2',\n  beforeMount: function beforeMount() {},\n  props: {\n    selectedPieces: Array\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    go: function go(ind) {\n      this.$parent.go(ind);\n    },\n    addMeasure: function addMeasure(measures, ev) {\n      var tempoInput = ev.target.parentElement.previousElementSibling,\n          measureInput = tempoInput.previousElementSibling;\n\n      if (measureInput.value.trim() && tempoInput.value.trim()) {\n        measures.push({\n          measure: measureInput.value,\n          tempo: tempoInput.value,\n          strategies: [],\n          id: measures.length\n        });\n        measureInput.value = \"\";\n        tempoInput.value = \"\";\n      }\n    }\n  }\n};",{"version":3,"sources":["Step2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,eAAA;AACA,QAAA,OADA;AAEA,eAAA,uBAAA,CAEA,CAJA;AAKA,SAAA;AACA,oBAAA;AADA,GALA;AAQA,QAAA,gBAAA;AACA,WAAA,EAAA;AAEA,GAXA;AAYA,WAAA;AACA,QAAA,YAAA,GAAA,EAAA;AACA,WAAA,OAAA,CAAA,EAAA,CAAA,GAAA;AACA,KAHA;AAIA,gBAAA,oBAAA,QAAA,EAAA,EAAA,EAAA;AACA,UAAA,aAAA,GAAA,MAAA,CAAA,aAAA,CAAA,sBAAA;AAAA,UACA,eAAA,WAAA,sBADA;;AAGA,UAAA,aAAA,KAAA,CAAA,IAAA,MAAA,WAAA,KAAA,CAAA,IAAA,EAAA,EAAA;AACA,iBAAA,IAAA,CAAA;AAAA,mBAAA,aAAA,KAAA;AAAA,iBAAA,WAAA,KAAA;AAAA,sBAAA,EAAA;AAAA,cAAA,SAAA;AAAA,SAAA;AACA,qBAAA,KAAA,GAAA,EAAA;AACA,mBAAA,KAAA,GAAA,EAAA;AACA;AACA;AAbA;AAZA,CAAA","sourcesContent":["<template>\n    <div>\n        <transition name=\"fade\">\n            <fieldset>\n                <div class=\"form-top\">\n                    <div class=\"form-top-left\">\n                        <p>Assign Measures:</p>\n                    </div>\n                    <div class=\"form-top-right\">\n                    </div>\n                </div>\n                <div class=\"form-bottom\">\n                    <div v-for=\"(piece,index) in selectedPieces\" :key=index class=\"form-group\">\n                        <div class=\"card\">\n                            <div class=\"card-header\">\n                                {{ piece.name + ' - ' + piece.source }}\n                            </div>\n                            <div class=\"card-body\">\n                                <div class=\"input-group mb-3\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Measure\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Tempo\">\n                                    <div class=\"input-group-append\">\n                                        <button class=\"btn btn-outline-secondary\" type=\"button\" v-on:click=\"addMeasure(piece.measures,$event)\">Add Measure</button>\n                                    </div>\n                                </div>\n                                <h5 class=\"card-title\">Measures</h5>\n                                <p v-if=\"!piece.measures.length\">No measures added</p>\n                                <p v-for=\"(measure,index) in piece.measures\" :key=index class=\"card-text\">{{measure.measure}} - Tempo {{measure.tempo}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"btn go btn-previous\" v-on:click=\"go(1)\">Previous</button>\n                    <button type=\"button\" class=\"btn go btn-next\" v-on:click=\"go(3)\">Next</button>\n                </div>\n            </fieldset>\n        </transition>\n    </div>\n</template>\n\n<script>\n    export default {\n    name: 'Step2',\n    beforeMount: function(){\n\n    },\n    props: {\n        selectedPieces: Array\n    },\n    data: function(){\n        return {\n        }\n    },\n    methods: {\n        go: function(ind){\n            this.$parent.go(ind);\n        },\n        addMeasure: function(measures,ev){\n            var tempoInput = ev.target.parentElement.previousElementSibling,\n                measureInput = tempoInput.previousElementSibling;\n\n            if(measureInput.value.trim() && tempoInput.value.trim()){\n                measures.push({measure:measureInput.value,tempo:tempoInput.value,strategies:[],id:measures.length});\n                measureInput.value = \"\";\n                tempoInput.value = \"\";\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/steps"}]}