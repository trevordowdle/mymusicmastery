{"remainingRequest":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js!/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/Login.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/Login.vue","mtime":1529559675651},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js","mtime":1529560903522},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Login',\n  beforeMount: function beforeMount() {\n    var vueThis = this,\n        userInfo = {};\n    var database = firebase.database();\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        userInfo.phoneNumber = user.phoneNumber;\n        userInfo.providerData = user.providerData;\n        userInfo.name = user.displayName;\n        userInfo.email = user.email;\n        userInfo.photoUrl = user.photoURL;\n        userInfo.uid = user.uid;\n        database.ref('users/' + userInfo.uid).update({\n          username: userInfo.name,\n          email: userInfo.email,\n          profile_picture: userInfo.photoUrl\n        });\n        database.ref('users/' + userInfo.uid).on(\"value\", function (snapshot) {\n          var userInf = snapshot.val();\n          userInfo.instrument = userInf.instrument || '';\n          userInfo.ageRange = userInf.ageRange || '';\n          userInfo.skillLevel = userInf.skillLevel || '';\n          userInfo.entries = userInf.entries;\n          vueThis.$emit('update', {\n            ref: 'user',\n            val: userInfo\n          });\n        }, function (err) {\n          console.log('read failed');\n        });\n        vueThis.$emit('update', {\n          ref: 'login',\n          val: false\n        });\n        vueThis.$emit('update', {\n          ref: 'step1',\n          val: true\n        });\n        vueThis.$emit('update', {\n          ref: 'database',\n          val: database\n        });\n        /*             \n            user.getIdToken().then(function(accessToken) {\n                debugger;\n                console.log(accessToken);\n            }); \n        */\n      } else {\n        var ui = new firebaseui.auth.AuthUI(firebase.auth()); // The start method will wait until the DOM is loaded.\n\n        ui.start('#firebaseui-auth-container', uiConfig);\n        vueThis.$emit('update', {\n          ref: 'login',\n          val: true\n        });\n      }\n    }, function (error) {\n      console.log(error);\n    });\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAYA,eAAA;AACA,QAAA,OADA;AAEA,eAAA,uBAAA;AACA,QAAA,UAAA,IAAA;AAAA,QACA,WAAA,EADA;AAGA,QAAA,WAAA,SAAA,QAAA,EAAA;AAEA,aAAA,IAAA,GAAA,kBAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA;AACA;AACA,iBAAA,WAAA,GAAA,KAAA,WAAA;AACA,iBAAA,YAAA,GAAA,KAAA,YAAA;AACA,iBAAA,IAAA,GAAA,KAAA,WAAA;AACA,iBAAA,KAAA,GAAA,KAAA,KAAA;AACA,iBAAA,QAAA,GAAA,KAAA,QAAA;AACA,iBAAA,GAAA,GAAA,KAAA,GAAA;AAGA,iBAAA,GAAA,CAAA,WAAA,SAAA,GAAA,EAAA,MAAA,CAAA;AACA,oBAAA,SAAA,IADA;AAEA,iBAAA,SAAA,KAFA;AAGA,2BAAA,SAAA;AAHA,SAAA;AAMA,iBAAA,GAAA,CAAA,WAAA,SAAA,GAAA,EAAA,EAAA,CAAA,OAAA,EAAA,oBAAA;AACA,cAAA,UAAA,SAAA,GAAA,EAAA;AACA,mBAAA,UAAA,GAAA,QAAA,UAAA,IAAA,EAAA;AACA,mBAAA,QAAA,GAAA,QAAA,QAAA,IAAA,EAAA;AACA,mBAAA,UAAA,GAAA,QAAA,UAAA,IAAA,EAAA;AACA,mBAAA,OAAA,GAAA,QAAA,OAAA;AACA,kBAAA,KAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,MAAA;AAAA,iBAAA;AAAA,WAAA;AACA,SAPA,EAOA,eAAA;AACA,kBAAA,GAAA,CAAA,aAAA;AACA,SATA;AAWA,gBAAA,KAAA,CAAA,QAAA,EAAA;AAAA,eAAA,OAAA;AAAA,eAAA;AAAA,SAAA;AACA,gBAAA,KAAA,CAAA,QAAA,EAAA;AAAA,eAAA,OAAA;AAAA,eAAA;AAAA,SAAA;AACA,gBAAA,KAAA,CAAA,QAAA,EAAA;AAAA,eAAA,UAAA;AAAA,eAAA;AAAA,SAAA;AAEA;;;;;;AAOA,OAtCA,MAsCA;AACA,YAAA,KAAA,IAAA,WAAA,IAAA,CAAA,MAAA,CAAA,SAAA,IAAA,EAAA,CAAA,CADA,CAEA;;AACA,WAAA,KAAA,CAAA,4BAAA,EAAA,QAAA;AACA,gBAAA,KAAA,CAAA,QAAA,EAAA;AAAA,eAAA,OAAA;AAAA,eAAA;AAAA,SAAA;AACA;AACA,KA7CA,EA6CA,UAAA,KAAA,EAAA;AACA,cAAA,GAAA,CAAA,KAAA;AACA,KA/CA;AAgDA;AAxDA,CAAA","sourcesContent":["<template>\n    <div class=\"login\">\n        <transition name=\"fade\">\n            <fieldset>\n                <p>Login</p>\n                <div id=\"firebaseui-auth-container\"></div>\n            </fieldset>\n        </transition>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  beforeMount: function(){\n    let vueThis = this,\n        userInfo = {};\n\n    var database = firebase.database();\n\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in.\n        userInfo.phoneNumber = user.phoneNumber;\n        userInfo.providerData = user.providerData;\n        userInfo.name = user.displayName;\n        userInfo.email = user.email;\n        userInfo.photoUrl = user.photoURL;\n        userInfo.uid = user.uid;\n\n\n        database.ref('users/' + userInfo.uid).update({\n            username: userInfo.name,\n            email: userInfo.email,\n            profile_picture : userInfo.photoUrl\n        });\n\n        database.ref('users/' + userInfo.uid).on(\"value\", snapshot =>{\n            let userInf = snapshot.val();\n            userInfo.instrument = userInf.instrument || '';\n            userInfo.ageRange = userInf.ageRange || '';\n            userInfo.skillLevel = userInf.skillLevel || ''; \n            userInfo.entries = userInf.entries;\n            vueThis.$emit('update',{ref:'user',val:userInfo});\n        }, err =>{\n            console.log('read failed');\n        });\n\n        vueThis.$emit('update',{ref:'login',val:false});\n        vueThis.$emit('update',{ref:'step1',val:true});\n        vueThis.$emit('update',{ref:'database',val:database});\n\n        /*             \n            user.getIdToken().then(function(accessToken) {\n                debugger;\n                console.log(accessToken);\n            }); \n        */\n\n      } else {\n        var ui = new firebaseui.auth.AuthUI(firebase.auth());\n        // The start method will wait until the DOM is loaded.\n        ui.start('#firebaseui-auth-container', uiConfig);\n        vueThis.$emit('update',{ref:'login',val:true});\n      }\n    }, function(error) {\n      console.log(error);\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"],"sourceRoot":"src/components"}]}