{"remainingRequest":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js!/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step4.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step4.vue","mtime":1529560338421},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js","mtime":1529560903522},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { generatePDF, breakUptext } from '../../pdf.js';\nconsole.log(generatePDF);\nimport Modal from './Modal.vue';\nexport default {\n  name: 'Step4',\n  components: {\n    Modal: Modal\n  },\n  beforeMount: function beforeMount() {},\n  props: {\n    selectedPieces: Array,\n    entryUID: String,\n    database: Object,\n    userUID: String\n  },\n  data: function data() {\n    return {\n      showModal: false\n    };\n  },\n  methods: {\n    go: function go(ind) {\n      this.$parent.go(ind);\n    },\n    saveEntry: function saveEntry() {\n      this.showModal = true;\n    },\n    pdf: function pdf() {\n      var doc = generatePDF(this.selectedPieces);\n      var strategyList = this.extractUniqueStrategies();\n      this.writeStrategies(doc, strategyList);\n      doc.save('checkList.pdf');\n    },\n    writeStrategies: function writeStrategies(doc, strategyList) {\n      doc.addPage();\n      doc.text('Strategy Descriptions:', 20, 20);\n      var trackHeight = 0,\n          measureIndex = 0;\n      strategyList.map(function (strategy, index) {\n        doc.text(strategy.label + ':', 20, 40 + measureIndex * 20 + trackHeight);\n        strategy.description = strategy.description.replace(/\\n/g, ' ');\n        strategy.description = strategy.description.replace(/\\r/g, '');\n        breakUptext(125, strategy.description).map(function (desc) {\n          if (!desc.trim()) {\n            desc = 'Not Available';\n          }\n\n          trackHeight += 20;\n          doc.text(desc + ' ', 20, 40 + measureIndex * 20 + trackHeight);\n        });\n\n        if (trackHeight + 20 * measureIndex >= 720) {\n          removeIndex = measureIndex + 1;\n          doc.addPage();\n          trackHeight = 0;\n          measureIndex = measureIndex - removeIndex;\n        }\n\n        measureIndex += 1;\n      });\n    },\n    extractUniqueStrategies: function extractUniqueStrategies() {\n      var uniqueStrategies = {},\n          strategies = [];\n      this.selectedPieces.map(function (piece) {\n        if (!piece.strategies) {\n          piece.strategies = [];\n        }\n\n        piece.strategies.map(function (strategy) {\n          if (!uniqueStrategies[strategy.id]) {\n            uniqueStrategies[strategy.id] = true;\n            strategies.push({\n              id: strategy.id,\n              label: strategy.label,\n              description: strategy.description\n            });\n          }\n        });\n\n        if (!piece.measures) {\n          piece.measures = [];\n        }\n\n        piece.measures.map(function (measure) {\n          measure.strategies.map(function (strategy) {\n            if (!uniqueStrategies[strategy.id]) {\n              uniqueStrategies[strategy.id] = true;\n              strategies.push({\n                id: strategy.id,\n                label: strategy.label,\n                description: strategy.description\n              });\n            }\n          });\n        });\n      });\n      return strategies;\n    },\n    closeModal: function closeModal() {\n      var _this = this;\n\n      if (!this.selectedPieces.entryName.trim()) {\n        this.selectedPieces.entryName = this.selectedPieces.entryName.trim();\n        return false;\n      }\n\n      if (this.entryUID) {\n        this.database.ref('users/' + this.userUID + '/entries/' + this.entryUID).set(this.selectedPieces).then(function () {\n          _this.$parent.exitEntry();\n        }, function (err) {\n          console.log(err);\n          alert('err saving, please contact support.');\n        });\n      } else {\n        var newEntryRef = this.database.ref('users/' + this.userUID + '/entries').push();\n        newEntryRef.set(this.selectedPieces).then(function () {\n          _this.$parent.exitEntry(); //alert('success');\n\n        }, function (err) {\n          console.log(err);\n          alert('err saving, please contact support.');\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Step4.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <Modal v-if=\"showModal\" @close=\"closeModal\">\n\n            <!--\n                you can use custom content here to overwrite\n                default content\n            -->\n            <h3 slot=\"header\">Entry Name</h3>\n            <input type=\"text\" slot=\"body\" placeholder=\"specify entry name\" class=\"form-control\" v-model=\"selectedPieces.entryName\" />\n\n        </Modal>\n        <transition name=\"fade\">\n            <fieldset>\n                <div class=\"form-top\">\n                    <div class=\"form-top-left\">\n                        <p>Add Notes:</p>\n                    </div>\n                    <div class=\"form-top-right\">\n                    </div>\n                </div>\n                <div class=\"form-bottom\">  \n                    <div v-for=\"(piece,i) in selectedPieces\" :key=\"i\" class=\"form-group\">\n                        <h5>{{ piece.name }} <span class=\"text-muted small\"> - {{ piece.source }}</span></h5>\n                        <textarea class=\"form-control\" v-model=\"piece.notes\" placeholder=\"Notes\">\n                        </textarea>\n                        <br />\n                        <input type=\"text\" class=\"form-control\" v-model=\"piece.link\" placeholder=\"Video Link\" /> \n                        <br />\n                    </div>\n                    <button type=\"button\" class=\"btn go btn-previous\" v-on:click=\"go(3)\">Previous</button>\n                    <button v-if=\"!entryUID\" type=\"button\" class=\"btn go btn-previous\" v-on:click=\"saveEntry()\">Save Entry</button>\n                    <button v-if=\"entryUID\" type=\"button\" class=\"btn go btn-previous\" v-on:click=\"saveEntry(true)\">Update Entry</button>\n                    <button v-if=\"entryUID\" type=\"button\" class=\"btn go btn-previous\" v-on:click=\"pdf()\">Generate CheckList</button>\n                </div> \n            </fieldset> \n        </transition>\n    </div>\n</template>\n\n<script>\n\n    import { generatePDF, breakUptext } from '../../pdf.js';\n    console.log(generatePDF);\n\n    import Modal from './Modal.vue';\n\n    export default {\n    name: 'Step4',\n    components: {\n        Modal\n    },\n    beforeMount: function(){\n    },\n    props: {\n        selectedPieces: Array,\n        entryUID:String,\n        database:Object,\n        userUID:String\n    },\n    data: function(){\n        return {\n            showModal: false\n        }\n    },\n    methods: {\n        go: function(ind){\n            this.$parent.go(ind);\n        },\n        saveEntry: function(){\n            this.showModal = true;\n        },\n        pdf: function(){\n            var doc = generatePDF(this.selectedPieces);\n\n            let strategyList = this.extractUniqueStrategies();\n\n            this.writeStrategies(doc,strategyList);\n\n            doc.save('checkList.pdf');\n        },\n        writeStrategies: function(doc,strategyList){\n            doc.addPage();\n            doc.text('Strategy Descriptions:', 20, 20);\n            let trackHeight = 0,\n                measureIndex = 0;\n\n            strategyList.map((strategy,index)=>{\n                doc.text(strategy.label+':', 20,40+(measureIndex*20)+trackHeight);\n                strategy.description = strategy.description.replace(/\\n/g,' ');\n                strategy.description = strategy.description.replace(/\\r/g,'');\n                breakUptext(125,strategy.description).map((desc)=>{\n                    if(!desc.trim()){\n                        desc = 'Not Available';\n                    }\n                    trackHeight += 20;\n                    doc.text(desc+' ', 20,40+(measureIndex*20)+trackHeight);\n                });\n                if(trackHeight+(20*measureIndex) >= 720){\n                    removeIndex = measureIndex+1;\n                    doc.addPage();\n                    trackHeight = 0;\n                    measureIndex = measureIndex - removeIndex;\n                }\n                measureIndex += 1;\n            });\n\n        },\n        extractUniqueStrategies: function(){\n\n            var uniqueStrategies = {},\n                strategies = [];\n\n            this.selectedPieces.map(piece => {\n\n                if(!piece.strategies){\n                    piece.strategies = [];\n                }\n                \n                piece.strategies.map((strategy)=>{\n                    if(!uniqueStrategies[strategy.id]){\n                        uniqueStrategies[strategy.id] = true;\n                        strategies.push({\n                            id:strategy.id,\n                            label:strategy.label,\n                            description:strategy.description\n                        });\n                    }\n                });\n\n                if(!piece.measures){\n                    piece.measures = [];\n                }\n\n                piece.measures.map(measure=>{\n                    measure.strategies.map((strategy)=>{\n                        if(!uniqueStrategies[strategy.id]){\n                            uniqueStrategies[strategy.id] = true;\n                            strategies.push({\n                                id:strategy.id,\n                                label:strategy.label,\n                                description:strategy.description\n                            });\n                        }\n                    });\n                });\n\n            });\n\n            return strategies;\n\n        },\n        closeModal: function(){\n\n            if(!this.selectedPieces.entryName.trim()){\n                this.selectedPieces.entryName = this.selectedPieces.entryName.trim();\n                return false;\n            }\n\n            if(this.entryUID){\n                this.database.ref('users/' + this.userUID + '/entries/' + this.entryUID).set(\n                    this.selectedPieces\n                ).then(()=>{\n                    this.$parent.exitEntry();\n                },(err)=>{\n                    console.log(err);\n                    alert('err saving, please contact support.');  \n                });\n            }\n            else {\n                let newEntryRef = this.database.ref('users/' + this.userUID + '/entries').push();\n                newEntryRef.set(this.selectedPieces).then(()=>{\n                    this.$parent.exitEntry();\n                    //alert('success');\n                },(err)=>{\n                    console.log(err);\n                    alert('err saving, please contact support.');  \n                });\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/steps"}]}