{"remainingRequest":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js!/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step3.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step3.vue","mtime":1528956249181},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js","mtime":1529560903522},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Modal from './Modal.vue';\nexport default {\n  name: 'Step3',\n  components: {\n    Modal: Modal\n  },\n  beforeMount: function beforeMount() {},\n  props: {\n    selectedPieces: Array,\n    strategies: Array\n  },\n  data: function data() {\n    return {\n      showModal: false,\n      selectedStrategy: {},\n      customStrategy: {\n        title: '',\n        id: '',\n        description: '',\n        strategiesRef: []\n      }\n    };\n  },\n  methods: {\n    go: function go(ind) {\n      this.$parent.go(ind);\n    },\n    addStrategy: function addStrategy(strategies, id) {\n      console.log(this.selectedStrategy[id]);\n\n      if (this.selectedStrategy[id]) {\n        if (!this.selectedStrategy[id].id) {\n          this.customStrategy.id = id;\n          this.customStrategy.title = this.selectedStrategy[id].label;\n          this.customStrategy.strategiesRef = strategies;\n          this.showModal = true;\n        } else {\n          strategies.push(this.selectedStrategy[id]);\n          delete this.selectedStrategy[id];\n        }\n      }\n    },\n    handleNewEntry: function handleNewEntry(option) {\n      return Object.keys(option).reduce(function (name, key) {\n        name += option[key];\n        return name;\n      }, \"\");\n    },\n    closeModal: function closeModal() {\n      if (this.customStrategy.description) {\n        this.customStrategy.strategiesRef.push({\n          label: this.customStrategy.title,\n          id: this.customStrategy.id,\n          description: this.customStrategy.description,\n          custom: true\n        });\n        delete this.selectedStrategy[this.customStrategy.id];\n        delete this.customStrategy.strategiesRef;\n        this.customStrategy.description = '';\n      }\n\n      this.showModal = false;\n    }\n  }\n};",{"version":3,"sources":["Step3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA,OAAA,KAAA,MAAA,aAAA;AAEA,eAAA;AACA,QAAA,OADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,eAAA,uBAAA,CAEA,CAPA;AAQA,SAAA;AACA,oBAAA,KADA;AAEA,gBAAA;AAFA,GARA;AAYA,QAAA,gBAAA;AACA,WAAA;AACA,iBAAA,KADA;AAEA,wBAAA,EAFA;AAGA,sBAAA;AACA,eAAA,EADA;AAEA,YAAA,EAFA;AAGA,qBAAA,EAHA;AAIA,uBAAA;AAJA;AAHA,KAAA;AAUA,GAvBA;AAwBA,WAAA;AACA,QAAA,YAAA,GAAA,EAAA;AACA,WAAA,OAAA,CAAA,EAAA,CAAA,GAAA;AACA,KAHA;AAIA,iBAAA,qBAAA,UAAA,EAAA,EAAA,EAAA;AAEA,cAAA,GAAA,CAAA,KAAA,gBAAA,CAAA,EAAA,CAAA;;AAEA,UAAA,KAAA,gBAAA,CAAA,EAAA,CAAA,EAAA;AAEA,YAAA,CAAA,KAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,EAAA;AACA,eAAA,cAAA,CAAA,EAAA,GAAA,EAAA;AACA,eAAA,cAAA,CAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,EAAA,EAAA,KAAA;AACA,eAAA,cAAA,CAAA,aAAA,GAAA,UAAA;AACA,eAAA,SAAA,GAAA,IAAA;AACA,SALA,MAMA;AACA,qBAAA,IAAA,CAAA,KAAA,gBAAA,CAAA,EAAA,CAAA;AACA,iBAAA,KAAA,gBAAA,CAAA,EAAA,CAAA;AACA;AACA;AACA,KArBA;AAsBA,oBAAA,wBAAA,MAAA,EAAA;AACA,aAAA,OAAA,IAAA,CAAA,MAAA,EAAA,MAAA,CAAA,UAAA,IAAA,EAAA,GAAA,EAAA;AACA,gBAAA,OAAA,GAAA,CAAA;AACA,eAAA,IAAA;AACA,OAHA,EAGA,EAHA,CAAA;AAIA,KA3BA;AA4BA,gBAAA,sBAAA;AACA,UAAA,KAAA,cAAA,CAAA,WAAA,EAAA;AACA,aAAA,cAAA,CAAA,aAAA,CAAA,IAAA,CAAA;AACA,iBAAA,KAAA,cAAA,CAAA,KADA;AAEA,cAAA,KAAA,cAAA,CAAA,EAFA;AAGA,uBAAA,KAAA,cAAA,CAAA,WAHA;AAIA,kBAAA;AAJA,SAAA;AAMA,eAAA,KAAA,gBAAA,CAAA,KAAA,cAAA,CAAA,EAAA,CAAA;AACA,eAAA,KAAA,cAAA,CAAA,aAAA;AACA,aAAA,cAAA,CAAA,WAAA,GAAA,EAAA;AACA;;AACA,WAAA,SAAA,GAAA,KAAA;AACA;AAzCA;AAxBA,CAAA","sourcesContent":["<template>\n    <div>\n        <Modal v-if=\"showModal\" @close=\"closeModal\">\n\n            <!--\n                you can use custom content here to overwrite\n                default content\n            -->\n            <h3 slot=\"header\">{{customStrategy.title}}</h3>\n            <textarea slot=\"body\" placeholder=\"add description\" class=\"form-control\" v-model=\"customStrategy.description\"></textarea>\n\n        </Modal>\n        <transition name=\"fade\">\n            <fieldset>\n                <div class=\"form-top\">\n                    <div class=\"form-top-left\">\n                        <p>Assign Practice Strategies:</p>\n                    </div>\n                    <div class=\"form-top-right\">\n                    </div>\n                </div>\n                <div class=\"form-bottom\">\n                    <div v-for=\"(piece,index) in selectedPieces\" :key=\"index\" class=\"form-group\">\n                        <div class=\"card\">\n                            <div class=\"card-header\">\n                                {{ piece.name + ' - ' + piece.source }}\n                            </div>\n                            <div class=\"card-body\">\n                                <div v-if=\"!piece.measures.length\">\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <div class=\"input-group\">\n                                                <v-select taggable push-tags class=\"strategy-select\" v-model=\"selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id]\" :options=\"strategies\" >\n                                                    <template slot=\"option\" slot-scope=\"option\">\n                                                        {{ option.label || handleNewEntry(option)}} <span v-if=\"!option.label\" class=\"text-muted small\"> - User Entry</span>\n                                                    </template>\n                                                </v-select>\n                                                <div class=\"input-group-append\">\n                                                    <button v-bind:class=\"{ 'btn-outline-success': selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id] }\" class=\"btn btn-outline-secondary\" type=\"button\" v-on:click=\"addStrategy(piece.strategies,(piece.source === 'User Entry' ? 'U':'') + piece.id)\">Add Strategy</button>\n                                                </div>\n                                            </div>\n                                            <br />\n                                            <p v-if=\"selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id]\">{{selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id].description}}</p>    \n                                            <br />\n                                            <p v-if=\"!piece.strategies.length\">No strategies added</p>\n                                            <p v-if=\"piece.strategies.length\">Selected Strategies</p>\n                                            <ol>\n                                                <li v-for=\"(strategy,index) in piece.strategies\" :key=\"index\">\n                                                    {{ strategy.label }}\n                                                </li>\n                                            </ol>                                             \n                                            <br />\n                                            <br />\n                                        </div>\n                                    </div>\n                                </div>\n                                <h5 class=\"card-title\">Measures</h5>\n                                <p v-if=\"!piece.measures.length\">No measures added</p>\n                                <div v-for=\"(measure,index) in piece.measures\" :key=\"index\">\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <p class=\"card-text\">{{measure.measure}} - Tempo {{measure.tempo}}</p>\n                                            <div class=\"input-group\">\n                                                <v-select taggable push-tags class=\"strategy-select\" v-model=\"selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id+''+measure.id]\" :options=\"strategies\" >\n                                                    <template slot=\"option\" slot-scope=\"option\">\n                                                        {{ option.label || handleNewEntry(option)}} <span v-if=\"!option.label\" class=\"text-muted small\"> - User Entry</span>\n                                                    </template>\n                                                </v-select>\n                                                <div class=\"input-group-append\">\n                                                    <button v-bind:class=\"{ 'btn-outline-success': selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id+''+measure.id] }\" class=\"btn btn-outline-secondary\" type=\"button\" v-on:click=\"addStrategy(measure.strategies,(piece.source === 'User Entry' ? 'U':'')+piece.id+''+measure.id)\">Add Strategy</button>\n                                                </div>\n                                            </div>\n                                            <br />\n                                            <p v-if=\"selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id+''+measure.id]\">{{selectedStrategy[(piece.source === 'User Entry' ? 'U':'')+piece.id+''+measure.id].description}}</p>    \n                                            <br />\n                                            <p v-if=\"!measure.strategies.length\">No strategies added for measure</p>\n                                            <p v-if=\"measure.strategies.length\">Selected Strategies</p>\n                                            <ol>\n                                                <li v-for=\"(strategy,index) in measure.strategies\" :key=\"index\">\n                                                    {{ strategy.label }}\n                                                </li>\n                                            </ol>  \n                                            <br />\n                                            <br />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"btn go btn-previous\" v-on:click=\"go(2)\">Previous</button>\n                    <button type=\"button\" class=\"btn go btn-next\" v-on:click=\"go(4)\">Next</button>\n                </div>\n            </fieldset>\n        </transition>\n    </div>\n</template>\n\n<script>\n\n    import Modal from './Modal.vue';\n\n    export default {\n    name: 'Step3',\n    components: {\n        Modal\n    },\n    beforeMount: function(){\n\n    },\n    props: {\n        selectedPieces: Array,\n        strategies:Array\n    },\n    data: function(){\n        return {\n            showModal: false,\n            selectedStrategy:{},\n            customStrategy : {\n                title:'',\n                id:'',\n                description:'',\n                strategiesRef:[]\n            }\n        }\n    },\n    methods: {\n        go: function(ind){\n            this.$parent.go(ind);\n        },\n        addStrategy: function(strategies,id){\n\n            console.log(this.selectedStrategy[id]);\n\n            if(this.selectedStrategy[id]){\n\n                if(!this.selectedStrategy[id].id){\n                    this.customStrategy.id = id;\n                    this.customStrategy.title = this.selectedStrategy[id].label;\n                    this.customStrategy.strategiesRef = strategies;\n                    this.showModal = true;\n                }\n                else {\n                    strategies.push(this.selectedStrategy[id]);\n                    delete this.selectedStrategy[id];\n                }\n            }\n        },\n        handleNewEntry: function(option){\n            return Object.keys(option).reduce((name,key)=>{\n                name += option[key];\n                return name;\n            },\"\");\n        },\n        closeModal: function(){\n            if(this.customStrategy.description){\n                this.customStrategy.strategiesRef.push({\n                    label:this.customStrategy.title,\n                    id:this.customStrategy.id,\n                    description:this.customStrategy.description,\n                    custom:true\n                });\n                delete this.selectedStrategy[this.customStrategy.id];\n                delete this.customStrategy.strategiesRef;\n                this.customStrategy.description = '';\n            }\n            this.showModal = false;\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components/steps"}]}