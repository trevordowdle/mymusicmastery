{"remainingRequest":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step4.vue?vue&type=template&id=46e05000","dependencies":[{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/src/components/steps/Step4.vue","mtime":1529560338421},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js","mtime":1529560903522},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1526010763000},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/cache-loader/dist/cjs.js","mtime":1529560903522},{"path":"/Users/tdowdle/Projects/MyMusicMastery/strategies/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _vm.showModal\n        ? _c(\"Modal\", { on: { close: _vm.closeModal } }, [\n            _c(\"h3\", { attrs: { slot: \"header\" }, slot: \"header\" }, [\n              _vm._v(\"Entry Name\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.selectedPieces.entryName,\n                  expression: \"selectedPieces.entryName\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: {\n                slot: \"body\",\n                type: \"text\",\n                placeholder: \"specify entry name\"\n              },\n              domProps: { value: _vm.selectedPieces.entryName },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.selectedPieces, \"entryName\", $event.target.value)\n                }\n              },\n              slot: \"body\"\n            })\n          ])\n        : _vm._e(),\n      _c(\"transition\", { attrs: { name: \"fade\" } }, [\n        _c(\"fieldset\", [\n          _c(\"div\", { staticClass: \"form-top\" }, [\n            _c(\"div\", { staticClass: \"form-top-left\" }, [\n              _c(\"p\", [_vm._v(\"Add Notes:\")])\n            ]),\n            _c(\"div\", { staticClass: \"form-top-right\" })\n          ]),\n          _c(\n            \"div\",\n            { staticClass: \"form-bottom\" },\n            [\n              _vm._l(_vm.selectedPieces, function(piece, i) {\n                return _c(\"div\", { key: i, staticClass: \"form-group\" }, [\n                  _c(\"h5\", [\n                    _vm._v(_vm._s(piece.name) + \" \"),\n                    _c(\"span\", { staticClass: \"text-muted small\" }, [\n                      _vm._v(\" - \" + _vm._s(piece.source))\n                    ])\n                  ]),\n                  _c(\"textarea\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: piece.notes,\n                        expression: \"piece.notes\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { placeholder: \"Notes\" },\n                    domProps: { value: piece.notes },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(piece, \"notes\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"br\"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: piece.link,\n                        expression: \"piece.link\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\", placeholder: \"Video Link\" },\n                    domProps: { value: piece.link },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(piece, \"link\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"br\")\n                ])\n              }),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn go btn-previous\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      _vm.go(3)\n                    }\n                  }\n                },\n                [_vm._v(\"Previous\")]\n              ),\n              !_vm.entryUID\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn go btn-previous\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function($event) {\n                          _vm.saveEntry()\n                        }\n                      }\n                    },\n                    [_vm._v(\"Save Entry\")]\n                  )\n                : _vm._e(),\n              _vm.entryUID\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn go btn-previous\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function($event) {\n                          _vm.saveEntry(true)\n                        }\n                      }\n                    },\n                    [_vm._v(\"Update Entry\")]\n                  )\n                : _vm._e(),\n              _vm.entryUID\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn go btn-previous\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function($event) {\n                          _vm.pdf()\n                        }\n                      }\n                    },\n                    [_vm._v(\"Generate CheckList\")]\n                  )\n                : _vm._e()\n            ],\n            2\n          )\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}